# coding: utf-8

"""
    \"Data Governance Center: REST API v2\"

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class XmlNs0UIConfiguration(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'catalog_recommendations_enabled': 'bool',
        'google_analytics_tracking_id': 'str',
        'job_server_available': 'bool',
        'max_file_count_per_day': 'float',
        'max_file_size': 'float',
        'max_number_of_columns_to_sort': 'float',
        'show_target_asset_type_above_relation_table': 'bool',
        'signin_autocomplete': 'bool',
        'signout_redirect': 'bool',
        'signout_redirect_url': 'str',
        'sso_or_saml_enabled': 'bool',
        'support_enabled': 'bool',
        'suppress_google_chrome_frame': 'bool',
        'tableau_provisioning_enabled': 'bool',
        'view_rights_enabled': 'bool'
    }

    attribute_map = {
        'catalog_recommendations_enabled': 'catalogRecommendationsEnabled',
        'google_analytics_tracking_id': 'googleAnalyticsTrackingID',
        'job_server_available': 'jobServerAvailable',
        'max_file_count_per_day': 'maxFileCountPerDay',
        'max_file_size': 'maxFileSize',
        'max_number_of_columns_to_sort': 'maxNumberOfColumnsToSort',
        'show_target_asset_type_above_relation_table': 'showTargetAssetTypeAboveRelationTable',
        'signin_autocomplete': 'signinAutocomplete',
        'signout_redirect': 'signoutRedirect',
        'signout_redirect_url': 'signoutRedirectUrl',
        'sso_or_saml_enabled': 'ssoOrSamlEnabled',
        'support_enabled': 'supportEnabled',
        'suppress_google_chrome_frame': 'suppressGoogleChromeFrame',
        'tableau_provisioning_enabled': 'tableauProvisioningEnabled',
        'view_rights_enabled': 'viewRightsEnabled'
    }

    def __init__(self, catalog_recommendations_enabled=None, google_analytics_tracking_id=None, job_server_available=None, max_file_count_per_day=None, max_file_size=None, max_number_of_columns_to_sort=None, show_target_asset_type_above_relation_table=None, signin_autocomplete=None, signout_redirect=None, signout_redirect_url=None, sso_or_saml_enabled=None, support_enabled=None, suppress_google_chrome_frame=None, tableau_provisioning_enabled=None, view_rights_enabled=None):  # noqa: E501
        """XmlNs0UIConfiguration - a model defined in Swagger"""  # noqa: E501

        self._catalog_recommendations_enabled = None
        self._google_analytics_tracking_id = None
        self._job_server_available = None
        self._max_file_count_per_day = None
        self._max_file_size = None
        self._max_number_of_columns_to_sort = None
        self._show_target_asset_type_above_relation_table = None
        self._signin_autocomplete = None
        self._signout_redirect = None
        self._signout_redirect_url = None
        self._sso_or_saml_enabled = None
        self._support_enabled = None
        self._suppress_google_chrome_frame = None
        self._tableau_provisioning_enabled = None
        self._view_rights_enabled = None
        self.discriminator = None

        if catalog_recommendations_enabled is not None:
            self.catalog_recommendations_enabled = catalog_recommendations_enabled
        if google_analytics_tracking_id is not None:
            self.google_analytics_tracking_id = google_analytics_tracking_id
        if job_server_available is not None:
            self.job_server_available = job_server_available
        if max_file_count_per_day is not None:
            self.max_file_count_per_day = max_file_count_per_day
        if max_file_size is not None:
            self.max_file_size = max_file_size
        if max_number_of_columns_to_sort is not None:
            self.max_number_of_columns_to_sort = max_number_of_columns_to_sort
        if show_target_asset_type_above_relation_table is not None:
            self.show_target_asset_type_above_relation_table = show_target_asset_type_above_relation_table
        if signin_autocomplete is not None:
            self.signin_autocomplete = signin_autocomplete
        if signout_redirect is not None:
            self.signout_redirect = signout_redirect
        if signout_redirect_url is not None:
            self.signout_redirect_url = signout_redirect_url
        if sso_or_saml_enabled is not None:
            self.sso_or_saml_enabled = sso_or_saml_enabled
        if support_enabled is not None:
            self.support_enabled = support_enabled
        if suppress_google_chrome_frame is not None:
            self.suppress_google_chrome_frame = suppress_google_chrome_frame
        if tableau_provisioning_enabled is not None:
            self.tableau_provisioning_enabled = tableau_provisioning_enabled
        if view_rights_enabled is not None:
            self.view_rights_enabled = view_rights_enabled

    @property
    def catalog_recommendations_enabled(self):
        """Gets the catalog_recommendations_enabled of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The catalog_recommendations_enabled of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._catalog_recommendations_enabled

    @catalog_recommendations_enabled.setter
    def catalog_recommendations_enabled(self, catalog_recommendations_enabled):
        """Sets the catalog_recommendations_enabled of this XmlNs0UIConfiguration.

          # noqa: E501

        :param catalog_recommendations_enabled: The catalog_recommendations_enabled of this XmlNs0UIConfiguration.  # noqa: E501
        :type: bool
        """

        self._catalog_recommendations_enabled = catalog_recommendations_enabled

    @property
    def google_analytics_tracking_id(self):
        """Gets the google_analytics_tracking_id of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The google_analytics_tracking_id of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._google_analytics_tracking_id

    @google_analytics_tracking_id.setter
    def google_analytics_tracking_id(self, google_analytics_tracking_id):
        """Sets the google_analytics_tracking_id of this XmlNs0UIConfiguration.

          # noqa: E501

        :param google_analytics_tracking_id: The google_analytics_tracking_id of this XmlNs0UIConfiguration.  # noqa: E501
        :type: str
        """

        self._google_analytics_tracking_id = google_analytics_tracking_id

    @property
    def job_server_available(self):
        """Gets the job_server_available of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The job_server_available of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._job_server_available

    @job_server_available.setter
    def job_server_available(self, job_server_available):
        """Sets the job_server_available of this XmlNs0UIConfiguration.

          # noqa: E501

        :param job_server_available: The job_server_available of this XmlNs0UIConfiguration.  # noqa: E501
        :type: bool
        """

        self._job_server_available = job_server_available

    @property
    def max_file_count_per_day(self):
        """Gets the max_file_count_per_day of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The max_file_count_per_day of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: float
        """
        return self._max_file_count_per_day

    @max_file_count_per_day.setter
    def max_file_count_per_day(self, max_file_count_per_day):
        """Sets the max_file_count_per_day of this XmlNs0UIConfiguration.

          # noqa: E501

        :param max_file_count_per_day: The max_file_count_per_day of this XmlNs0UIConfiguration.  # noqa: E501
        :type: float
        """

        self._max_file_count_per_day = max_file_count_per_day

    @property
    def max_file_size(self):
        """Gets the max_file_size of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The max_file_size of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: float
        """
        return self._max_file_size

    @max_file_size.setter
    def max_file_size(self, max_file_size):
        """Sets the max_file_size of this XmlNs0UIConfiguration.

          # noqa: E501

        :param max_file_size: The max_file_size of this XmlNs0UIConfiguration.  # noqa: E501
        :type: float
        """

        self._max_file_size = max_file_size

    @property
    def max_number_of_columns_to_sort(self):
        """Gets the max_number_of_columns_to_sort of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The max_number_of_columns_to_sort of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: float
        """
        return self._max_number_of_columns_to_sort

    @max_number_of_columns_to_sort.setter
    def max_number_of_columns_to_sort(self, max_number_of_columns_to_sort):
        """Sets the max_number_of_columns_to_sort of this XmlNs0UIConfiguration.

          # noqa: E501

        :param max_number_of_columns_to_sort: The max_number_of_columns_to_sort of this XmlNs0UIConfiguration.  # noqa: E501
        :type: float
        """

        self._max_number_of_columns_to_sort = max_number_of_columns_to_sort

    @property
    def show_target_asset_type_above_relation_table(self):
        """Gets the show_target_asset_type_above_relation_table of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The show_target_asset_type_above_relation_table of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._show_target_asset_type_above_relation_table

    @show_target_asset_type_above_relation_table.setter
    def show_target_asset_type_above_relation_table(self, show_target_asset_type_above_relation_table):
        """Sets the show_target_asset_type_above_relation_table of this XmlNs0UIConfiguration.

          # noqa: E501

        :param show_target_asset_type_above_relation_table: The show_target_asset_type_above_relation_table of this XmlNs0UIConfiguration.  # noqa: E501
        :type: bool
        """

        self._show_target_asset_type_above_relation_table = show_target_asset_type_above_relation_table

    @property
    def signin_autocomplete(self):
        """Gets the signin_autocomplete of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The signin_autocomplete of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._signin_autocomplete

    @signin_autocomplete.setter
    def signin_autocomplete(self, signin_autocomplete):
        """Sets the signin_autocomplete of this XmlNs0UIConfiguration.

          # noqa: E501

        :param signin_autocomplete: The signin_autocomplete of this XmlNs0UIConfiguration.  # noqa: E501
        :type: bool
        """

        self._signin_autocomplete = signin_autocomplete

    @property
    def signout_redirect(self):
        """Gets the signout_redirect of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The signout_redirect of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._signout_redirect

    @signout_redirect.setter
    def signout_redirect(self, signout_redirect):
        """Sets the signout_redirect of this XmlNs0UIConfiguration.

          # noqa: E501

        :param signout_redirect: The signout_redirect of this XmlNs0UIConfiguration.  # noqa: E501
        :type: bool
        """

        self._signout_redirect = signout_redirect

    @property
    def signout_redirect_url(self):
        """Gets the signout_redirect_url of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The signout_redirect_url of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._signout_redirect_url

    @signout_redirect_url.setter
    def signout_redirect_url(self, signout_redirect_url):
        """Sets the signout_redirect_url of this XmlNs0UIConfiguration.

          # noqa: E501

        :param signout_redirect_url: The signout_redirect_url of this XmlNs0UIConfiguration.  # noqa: E501
        :type: str
        """

        self._signout_redirect_url = signout_redirect_url

    @property
    def sso_or_saml_enabled(self):
        """Gets the sso_or_saml_enabled of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The sso_or_saml_enabled of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._sso_or_saml_enabled

    @sso_or_saml_enabled.setter
    def sso_or_saml_enabled(self, sso_or_saml_enabled):
        """Sets the sso_or_saml_enabled of this XmlNs0UIConfiguration.

          # noqa: E501

        :param sso_or_saml_enabled: The sso_or_saml_enabled of this XmlNs0UIConfiguration.  # noqa: E501
        :type: bool
        """

        self._sso_or_saml_enabled = sso_or_saml_enabled

    @property
    def support_enabled(self):
        """Gets the support_enabled of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The support_enabled of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._support_enabled

    @support_enabled.setter
    def support_enabled(self, support_enabled):
        """Sets the support_enabled of this XmlNs0UIConfiguration.

          # noqa: E501

        :param support_enabled: The support_enabled of this XmlNs0UIConfiguration.  # noqa: E501
        :type: bool
        """

        self._support_enabled = support_enabled

    @property
    def suppress_google_chrome_frame(self):
        """Gets the suppress_google_chrome_frame of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The suppress_google_chrome_frame of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._suppress_google_chrome_frame

    @suppress_google_chrome_frame.setter
    def suppress_google_chrome_frame(self, suppress_google_chrome_frame):
        """Sets the suppress_google_chrome_frame of this XmlNs0UIConfiguration.

          # noqa: E501

        :param suppress_google_chrome_frame: The suppress_google_chrome_frame of this XmlNs0UIConfiguration.  # noqa: E501
        :type: bool
        """

        self._suppress_google_chrome_frame = suppress_google_chrome_frame

    @property
    def tableau_provisioning_enabled(self):
        """Gets the tableau_provisioning_enabled of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The tableau_provisioning_enabled of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._tableau_provisioning_enabled

    @tableau_provisioning_enabled.setter
    def tableau_provisioning_enabled(self, tableau_provisioning_enabled):
        """Sets the tableau_provisioning_enabled of this XmlNs0UIConfiguration.

          # noqa: E501

        :param tableau_provisioning_enabled: The tableau_provisioning_enabled of this XmlNs0UIConfiguration.  # noqa: E501
        :type: bool
        """

        self._tableau_provisioning_enabled = tableau_provisioning_enabled

    @property
    def view_rights_enabled(self):
        """Gets the view_rights_enabled of this XmlNs0UIConfiguration.  # noqa: E501

          # noqa: E501

        :return: The view_rights_enabled of this XmlNs0UIConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._view_rights_enabled

    @view_rights_enabled.setter
    def view_rights_enabled(self, view_rights_enabled):
        """Sets the view_rights_enabled of this XmlNs0UIConfiguration.

          # noqa: E501

        :param view_rights_enabled: The view_rights_enabled of this XmlNs0UIConfiguration.  # noqa: E501
        :type: bool
        """

        self._view_rights_enabled = view_rights_enabled

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, XmlNs0UIConfiguration):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
