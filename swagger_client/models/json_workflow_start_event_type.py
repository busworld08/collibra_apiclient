# coding: utf-8

"""
    \"Data Governance Center: REST API v2\"

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class JsonWorkflowStartEventType(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ASSET_ADDED = "ASSET_ADDED"
    ASSET_REMOVED = "ASSET_REMOVED"
    ASSET_STATUS_CHANGED = "ASSET_STATUS_CHANGED"
    ASSET_DOMAIN_CHANGED = "ASSET_DOMAIN_CHANGED"
    ASSET_TYPE_CHANGED = "ASSET_TYPE_CHANGED"
    ASSET_ATTRIBUTE_CHANGED = "ASSET_ATTRIBUTE_CHANGED"
    ASSET_NAME_CHANGED = "ASSET_NAME_CHANGED"
    ASSET_ATTRIBUTE_ADDED = "ASSET_ATTRIBUTE_ADDED"
    ASSET_ATTRIBUTE_REMOVED = "ASSET_ATTRIBUTE_REMOVED"
    DOMAIN_ADDED = "DOMAIN_ADDED"
    DOMAIN_REMOVED = "DOMAIN_REMOVED"
    ROLE_GRANTED = "ROLE_GRANTED"
    ROLE_REVOKED = "ROLE_REVOKED"
    WORKFLOW_STARTED = "WORKFLOW_STARTED"
    WORKFLOW_CANCELED = "WORKFLOW_CANCELED"
    WORKLFLOW_ESCALATION = "WORKLFLOW_ESCALATION"
    WORKFLOW_TASK_COMPLETED = "WORKFLOW_TASK_COMPLETED"
    USER_ADDED = "USER_ADDED"
    USER_REMOVED = "USER_REMOVED"
    USER_DISABLED = "USER_DISABLED"
    COMMENT_ADDED = "COMMENT_ADDED"
    COMMENT_REMOVED = "COMMENT_REMOVED"
    COMMENT_CHANGED = "COMMENT_CHANGED"
    RELATION_ADDED_AND_ASSET_IS_SOURCE = "RELATION_ADDED_AND_ASSET_IS_SOURCE"
    RELATION_REMOVED_AND_ASSET_WAS_SOURCE = "RELATION_REMOVED_AND_ASSET_WAS_SOURCE"
    RELATION_ADDED_AND_ASSET_IS_TARGET = "RELATION_ADDED_AND_ASSET_IS_TARGET"
    RELATION_REMOVED_AND_ASSET_WAS_TARGET = "RELATION_REMOVED_AND_ASSET_WAS_TARGET"

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
    }

    attribute_map = {
    }

    def __init__(self):  # noqa: E501
        """JsonWorkflowStartEventType - a model defined in Swagger"""  # noqa: E501
        self.discriminator = None

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JsonWorkflowStartEventType):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
